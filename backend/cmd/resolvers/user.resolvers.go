package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"
	"server/graph"
	gql_model "server/graph/model"
	"server/pkg/model"
)

// User is the resolver for the user field.
func (r *authPayloadResolver) User(ctx context.Context, obj *gql_model.AuthPayload) (*model.User, error) {
	return obj.User, nil
}

// ID is the resolver for the id field.
func (r *userResolver) ID(ctx context.Context, obj *model.User) (string, error) {
	return fmt.Sprintf("%d", obj.ID), nil // Assuming ID is a uint64
}

// AuthPayload returns graph.AuthPayloadResolver implementation.
func (r *Resolver) AuthPayload() graph.AuthPayloadResolver { return &authPayloadResolver{r} }

// User returns graph.UserResolver implementation.
func (r *Resolver) User() graph.UserResolver { return &userResolver{r} }

type authPayloadResolver struct{ *Resolver }
type userResolver struct{ *Resolver }
